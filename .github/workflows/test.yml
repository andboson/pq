name: Test

on:
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    #container: node:10.18-jessie
    strategy:
      matrix:
        postgres:
          #- '12'
          #- '11'
          #- '10'
          - '9.6'
          #- '9.5'
        go:
          - '1.13'
          #- '1.14'
#    services:
#      postgres:
#        image: postgres:${{ matrix.postgres }}
#        env:
#          POSTGRES_PASSWORD: postgres
#          #POSTGRES_HOST_AUTH_METHOD=trust
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        volumes:
#          - /postgres-init:/docker-entrypoint-initdb.d
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Start Postgres
      uses: ./.github/actions/postgres

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^${{ matrix.go }}
      id: go

    - name: Install staticcheck
      run: |
        wget https://github.com/dominikh/go-tools/releases/latest/download/staticcheck_linux_amd64.tar.gz -O - | tar -xz staticcheck

    - name: Install goimports
      run: go get golang.org/x/tools/cmd/goimports

    - name: Run goimports
      run: |
        goimports -d -e ./... | awk '{ print } END { exit NR == 0 ? 0 : 1 }'

    - name: Run staticcheck
      run: ./staticcheck/staticcheck -go 1.13 ./...

    - name: Build
      run: go build -v .

    - name: Test
      env:
        PGUSER: postgres
        PGHOST: localhost
        PGPORT: 5432
        PGPASSWORD: postgres
        #PQGOSSLTESTS: 1
        #PQSSLCERTTEST_PATH: $PWD/certs
      run: go test -v .
